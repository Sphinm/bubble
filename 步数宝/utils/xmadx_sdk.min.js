exports.xmad = function(t, a) {
    try {
        var e = "wepy" === t;
    } catch (t) {}
    try {
        if (t.prototype.constructor.name) {
            var n, r;
            "App" === a ? n = t : r = t;
        }
    } catch (t) {}
    var i = require("./xmadx_conf.js"), o = require("./xmadx_MD5.js"), s = {};
    if (!i.app_key || 32 !== i.app_key.length) return console.warn("小盟提示：配置错误，请在xmadx_conf.js中正确配置您的app_key。"), 
    {
        xmApp: function(t) {
            n ? n(t) : App(t);
        },
        xmPage: function(t) {
            r ? r(t) : Page(t);
        }
    };
    var c = {
        ak: i.app_key.replace(/(^\s*)|(\s*$)/g, ""),
        v: "1.5.1",
        asid: "",
        reqid: "",
        pb: "",
        pm: "",
        sv: "",
        pv: "",
        nt: "",
        ww: 0,
        wh: 0,
        pr: 0,
        long: 0,
        lat: 0,
        wvv: "",
        wv: "",
        lang: "",
        wsr: {},
        pp: "",
        uuid: "",
        drop: {
            hasCollect: !1,
            hasSell: !1,
            hasCopy: !1
        },
        user_info: {}
    }, p = 0, u = function() {
        function t() {
            return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);
        }
        var a = void 0;
        try {
            if (a = wx.getStorageSync("xmaduuid")) return a;
        } catch (t) {}
        a = t() + t() + t() + t() + t() + t() + t() + t();
        try {
            wx.setStorageSync("xmaduuid", a);
        } catch (t) {}
        return a;
    }, d = "pages/xmadPage/sell", l = "pages/xmadPage/collect", f = function() {
        var t = !1, a = !1, e = !1;
        try {
            var n = __wxConfig.pages;
            t = n.some(function(t) {
                return t === d;
            }), a = n.some(function(t) {
                return t === l;
            }), e = n.some(function(t) {
                return t === e;
            });
        } catch (t) {}
        c.drop.hasSell = t, c.drop.hasCollect = a, c.drop.hasCopy = e;
    }, g = function(t) {
        function a() {
            4 === e.length && (p = 1, t && t());
        }
        var e = [];
        wx.getSetting({
            success: function(t) {
                t.authSetting["scope.userInfo"] ? wx.getUserInfo({
                    withCredentials: !1,
                    success: function(t) {
                        c.user_info = t.userInfo;
                    },
                    complete: function() {
                        e.push("ok1"), a();
                    }
                }) : (e.push("ok1"), a());
            },
            fail: function() {
                e.push("ok1"), a();
            }
        }), wx.getSystemInfo({
            success: function(t) {
                c.wv = void 0 === t.SDKVersion ? "1.0.0" : t.SDKVersion, c.pb = t.brand, c.pm = t.model, 
                c.pr = t.pixelRatio, c.ww = t.screenWidth, c.wh = t.screenHeight, c.lang = t.language, 
                c.wvv = t.version, c.sv = t.system, c.pv = t.platform;
            },
            complete: function() {
                e.push("ok2"), a();
            }
        }), wx.getSetting({
            success: function(t) {
                t.authSetting["scope.userLocation"] ? wx.getLocation({
                    type: "wgs84",
                    success: function(t) {
                        c.long = t.latitude, c.lat = t.longitude;
                    },
                    complete: function() {
                        e.push("ok3"), a();
                    }
                }) : (e.push("ok3"), a());
            },
            fail: function() {
                e.push("ok3"), a();
            }
        }), wx.getNetworkType({
            success: function(t) {
                c.nt = t.networkType;
            },
            complete: function() {
                e.push("ok4"), a();
            }
        });
    }, x = function(t) {
        switch (t) {
          case 1:
            return {
                dTag: "xm_banner",
                dClass: "banner_style"
            };

          case 2:
            return {
                dTag: "xm_insert",
                dClass: "screen_style"
            };

          case 3:
            return {
                dTag: "xm_fixed",
                dClass: "fixed_style"
            };

          default:
            return;
        }
    }, m = function(t, a, n, r) {
        if (n) return 32 != n.length ? console.warn("广告位ID应为长度为32位，请检查您在js中'xmad'的配置--" + n) : void h(n, [ "engine", "v1/api/ad" ], function(i) {
            if (200 == i.data.code) {
                var o = i.data.data;
                s[n] = o, s[n].hasshow = !0, s[n].id = n, s[n].push = 0;
                var c = x(o.ct);
                if (c) {
                    s[n].style = I[c.dClass];
                    var p = a.data.xmad;
                    p.adData = s, e ? a.xmapply(s) : a.setData({
                        xmad: p
                    });
                }
            } else if (202 == i.data.code) {
                console.warn(t + "广告位ID" + n + "未匹配到广告");
                var u = a.data.xmad;
                u.empty || (u.empty = {}), "banner" == t && r ? (u.empty[t] || (u.empty[t] = []), 
                u.empty[t].push({
                    id: n,
                    reason: i.data.msg
                })) : u.empty[t] = {
                    id: n,
                    reason: i.data.msg
                }, a.setData({
                    xmad: u
                });
            }
        });
    }, h = function(t, a, e, n) {
        0 === p ? g(function() {
            v(t, e, a, n);
        }) : v(t, e, a, n);
    }, v = function(t, a, e, n) {
        var n = n ? "get" : "post", r = "https://" + e[0] + ".xmadx.net/";
        if (c.asid = t, c.uuid = c.uuid || u(), "log" != e[0]) {
            var i = Date.now() + c.ak + c.uuid + c.asid;
            c.reqid = o.hexMD5(i);
        }
        var s = 0;
        !function t() {
            wx.request({
                url: r + e[1],
                data: c,
                header: {},
                method: n,
                success: function(t) {
                    a(t);
                },
                fail: function() {
                    s < 2 && (s++, c.retryTimes = s, setTimeout(function() {
                        t();
                    }, 1e3));
                }
            });
        }();
    }, w = function(t) {
        c.uuid = u(), wx.setStorageSync("xmwsr", t);
    }, y = function() {
        f(), c.wsr = wx.getStorageSync("xmwsr"), c.pp = this.route;
        var t;
        try {
            t = this.data.xmad.ad;
        } catch (t) {}
        if (t) {
            var a = this;
            for (var e in t) "banner" === e && "Array" === Object.prototype.toString.call(t[e]).split(" ")[1].slice(0, -1) ? t[e].forEach(function(t) {
                m(e, a, t, 1);
            }) : m(e, a, t[e]);
        }
    }, b = function() {
        var t = this.options.xmadH5url;
        t && (t = t.replace("|", "?").replace("$", "="), this.setData({
            xmadURL: t
        }));
    }, k = function(t, a) {
        var e = e ? "get" : "post", n = {};
        /imp/.test(a) ? n.iurl = t : n.curl = t;
        var r = 0;
        !function t() {
            wx.request({
                url: "https://log.xmadx.net/" + a,
                data: n,
                method: e ? "post" : "get",
                success: function() {},
                fail: function() {
                    r < 2 && (r++, n.retryTimes = r, setTimeout(function() {
                        t();
                    }, 1e3));
                }
            });
        }();
    }, _ = function(t) {
        var a = t.currentTarget.dataset.id, e = s[a];
        if (0 === e.push) {
            var n = e.iurl.split("?")[1], r = this, i = wx.createIntersectionObserver(r, {
                thresholds: [ .2 ],
                selectAll: !0
            });
            if (1 === e.ct) i.relativeToViewport().observe(".xm_banner", function(t) {
                if (t.intersectionRatio > .2) {
                    var e = r.data.xmad;
                    e.adData[a].push = 1, e.adData.baseURL = "https://log.xmadx.net/", r.setData({
                        xmad: e
                    }), k(n, "v1/api/imp"), i.disconnect();
                }
            }); else {
                var o = this.data.xmad;
                o.adData.ENV = 0, o.adData[a].push = 1, o.adData.baseURL = "https://log.xmadx.net/", 
                this.setData({
                    xmad: o
                }), k(n, "v1/api/imp");
            }
        }
    }, D = function(t) {
        var a = t.currentTarget.dataset.id, e = this.data.xmad;
        e.adData[a].hasshow = !1, this.setData({
            xmad: e
        });
    }, S = function(t) {
        var a = t.currentTarget.dataset.id, n = s[a].curl.replace(/cst=/gi, "cst=" + Date.now());
        n = n.split("?")[1];
        var r = s[a].at;
        switch (r) {
          case 1:
            var o = i.h5_path || e ? "/pages/xmadH5" : "/pages/xmadH5/xmadH5", p = s[a].h5link.replace("?", "|").replace("=", "$");
            p && wx.navigateTo({
                url: o + "?xmadH5url=" + p,
                success: function() {
                    k(n, "v1/api/clk");
                },
                fail: function() {
                    console.warn("小盟提示：跳转H5广告失败，请在xmadx_conf.js中正确配置h5_path字段。");
                }
            });
            break;

          case 2:
            t.currentTarget.dataset.adImgUrl || (t.currentTarget.dataset.adImgUrl = s[a].appimg), 
            wx.previewImage({
                current: t.currentTarget.dataset.adImgUrl,
                urls: [ t.currentTarget.dataset.adImgUrl ],
                success: function() {
                    k(n, "v1/api/clk");
                }
            });
            break;

          case 3:
          case 4:
            k(n, "v1/api/clk");
            break;

          case 5:
          case 6:
          case 7:
            var u, f = s[a].page, g = c.ak, x = c.uuid, m = s[a].isAccredit, h = s[a].curl.split("?")[1].replace(/=/gi, "!");
            1 == f.purpose && (u = l), 2 == f.purpose && (u = d), 3 == f.purpose && (u = "pages/xmadPage/copyInfo"), 
            u && wx.navigateTo({
                url: "/" + u + "?xmadPage=" + f.config + "&title=" + f.title + "&pagekey=" + f.page_key + "&appkey=" + g + "&ukey=" + x + "&hasAuth=" + m + "&bs=https://engine.xmadx.net/v1/api/&cu=" + h,
                success: function() {
                    k(n, "v1/api/clk");
                },
                fail: function(t) {
                    console.warn(t, "小盟提示：跳转失败，请检查内置广告页是否配置正确。");
                }
            });
            break;

          default:
            console.error("SDK错误：跳转类型at为：" + r + " ，不是约定的类型。无法进行跳转、点击上报，联系GO工程师！！！");
        }
    }, T = function(t, a, e) {
        var n = t[a];
        t[a] = function(t) {
            n && n.call(this, t), e.call(this, t);
        };
    }, I = {
        banner_style: {
            wrap: "position: relative; display: flex; width: 100%; overflow: hidden",
            img: "width: 100%; margin: 0 auto;",
            icon: "position: absolute; left: 2rpx; bottom: 2rpx; width: 76rpx !important; height: 24rpx !important; line-height: 24rpx; background: rgba(0, 0, 0, .2); font-size: 16rpx; color: #fff; text-align: center; border-radius: 16rpx;",
            nav: "position: absolute; top: 0; right: 0; left: 0; bottom: 0; margin: 0; background: none;"
        },
        screen_style: {
            wrap: "position: fixed; width: 100%; height: 100%; left: 0; top: 0; background: rgba(0, 0, 0, .3); z-index: 9999;",
            content: "position: relative; display: flex; width: 600rpx !important; overflow: hidden; left: calc(50% - 300rpx); top: calc(50% - 250rpx)",
            img: "width: 100%;",
            close: "position: absolute; top: 0; right: 0; width: 34rpx !important; height: 34rpx !important; padding: 10rpx; z-index: 2",
            nav: "position: absolute; top: 0; right: 0; left: 0; bottom: 0; margin: 0; background: none;",
            icon: "position: absolute; left: 2rpx; bottom: 2rpx; width: 76rpx !important; height: 24rpx !important; line-height: 24rpx; background: rgba(0, 0, 0, .2); font-size: 16rpx; color: #fff; text-align: center; border-radius: 16rpx;"
        },
        fixed_style: {
            wrap: "position: fixed; display: flex; width: 120rpx !important; right: 60rpx; bottom: 60rpx; z-index: 9998;",
            img: "width: 100%;",
            nav: "position: absolute; top: 0; right: 0; left: 0; bottom: 0; margin: 0; background: none;"
        }
    };
    return {
        xmApp: function(t) {
            T(t, "onLaunch", w), n ? n(t) : App(t);
        },
        xmPage: function(t) {
            T(t, "onLoad", y), T(t, "onShow", b), T(t, "xmadClose", D), T(t, "adImgLoad", _), 
            T(t, "appoIntView", S), r ? r(t) : Page(t);
        }
    };
};